-------------------------------------------------------------------------------
Changes in version 0.70

- Modified srlog to transmit MMSG packets with multiple lines, and to
  retransmit a few times before falling back to disconnected state.

- Fixed up srlogd bugs with receiving MMSG packets.

- Modified srlog to load the client key from /etc/srlog/key/secret if
  "secret" is not present in the current directory.

- Renamed srlog-prep to srlog-keygen.

- The first 32 bytes of the SHA-512 hash of the shared secret is used as
  the encryption key instead of the first 24 bytes of the raw data.

- Encryption state is not followed between packets.  This simplifies the
  retransmit logic, preventing encryptor desynchronization.

- An IV is set on each packet from the encrypted sequence number.

Note: The encryption changes breaks compatibility with previous versions.
-------------------------------------------------------------------------------
Changes in version 0.69.2

- Modified srlog-prep to accept multiple directories.
- Modified srlog to load the server key from /etc/srlog/servers/$SERVER
-------------------------------------------------------------------------------
Changes in version 0.69.1

- Modified srlog-prep to only install new files if they don't already
  exist.
-------------------------------------------------------------------------------
Changes in version 0.69.0

- Renamed package to srlog
  fq-logs-sender => srlog
  fq-logs-receiver => srlogd
  fq-logs-prep => srlog-prep
- Made the profiling hook logic dynamic, in order to avoid having to
  recompile to get the bailout behavior.
-------------------------------------------------------------------------------
Changes in version 0.68

- Changed the array of senders in fq-logs-receiver into a hash table,
  resulting in much faster lookups for long lists of senders.
-------------------------------------------------------------------------------
Changes in version 0.67

- Fixed a memory/resource leak in random.c, and improved the pool
  recycling algorithm.
- Modularized the buffer and sequence number handling from fq-logs-sender.
- Modified fq-logs-receiver to throttle INIs based on rate (limited to
  one every 1/64s) and queued packets (drops INIs if there are queued up
  MSG packets).
-------------------------------------------------------------------------------
Changes in version 0.66

- Maintain a "current" symlink in the log directories for convenience.
- Fixed fq-logs-receiver to handle reconnects after dropped/delayed ACKs
  without duplicating lines.
-------------------------------------------------------------------------------
Changes in version 0.65

- Fixed the sequence number initialization on reconnect, that had been
  causing spurious decryption failures.
- Fixed missing random value initialization bug in fq-logs-prep.c
- Don't print out that annoying "Socket receive failed: Interrupted
  system call" error on interrupt in fq-logs-receiver.
- Switched to the use of pointers for the buffered line in
  fq-logs-sender, which dropped code size by a whopping 2kB.
- Fixed bug in fq-logs-sender that caused initialization to fail if the
  first sequence number was zero (and the other was non-zero).
-------------------------------------------------------------------------------
Changes in version 0.60

- Added a CRC to the encrypted data in MSG packets, just to be certain
  that the encryption didn't get out of sync between the sender and
  receiver.  This changes the MSG packet format.
-------------------------------------------------------------------------------
Changes in version 0.55

- Switched to the older Rijndael code being used for srcmd, which is
  actually faster than the newer AES code that had been used.
- Switched from ECB to CBC encryption (this will break compatibility!).
-------------------------------------------------------------------------------
